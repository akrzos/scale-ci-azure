---
#
# Installs tooling for scale-ci pipeline tests on an OSA cluster
#

- name: Install and Setup cluster
  hosts: master, infra, compute
  gather_facts: false
  vars_files:
    - vars/install.yml
    - vars/install.local.yml
  tasks:
    - name: Ensure .ssh directory exists for root
      become: true
      file:
        path: /root/.ssh
        state: directory

    - name: Configure ssh keys
      become: true
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        mode: "{{item.mode}}"
      with_items:
        - src: "{{ssh_key_private}}"
          dest: /root/.ssh/id_rsa
          mode: "0600"
        - src: "{{ssh_key_public}}"
          dest: /root/.ssh/id_rsa.pub
          mode: "0600"

    - name: Configure ssh access
      become: true
      lineinfile:
        path: "{{item}}"
        line: "{{public_key_contents}}"
        create: true
      with_items:
        - /home/cloud-user/.ssh/authorized_keys
        - /root/.ssh/authorized_keys

    - name: Add repo files
      become: true
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        mode: "{{item.mode}}"
      with_items: "{{repo_files}}"

    - name: Install EPEL
      become: true
      yum:
        name: "{{epel_rpm}}"
        state: latest

    - name: Install performance tools packages
      become: true
      yum:
        name: "{{perf_packages}}"
        state: latest

    - name: Configure pbench
      become: true
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        mode: "{{item.mode}}"
      with_items: "{{pbench_files}}"

    - name: Clone svt repo
      become: true
      git:
        repo: https://github.com/openshift/svt
        dest: /root/svt
        force: true

    - name: Copy ssh key for svt networking tests
      become: true
      shell: |
        cd /root/svt/networking/synthetic
        cp /root/.ssh/id_rsa.pub id_rsa.pub

    - name: Allow networking tests over the firewall for Node2Node
      become: true
      shell: |
        iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
        iptables -D FORWARD -j REJECT --reject-with icmp-host-prohibited
        iptables-save > /etc/sysconfig/iptables

    - name: Reload iptables service
      become: true
      service:
        name: iptables
        state: reloaded
        enabled: yes

- name: Configure masters
  hosts: master
  gather_facts: false
  vars_files:
    - vars/install.yml
    - vars/install.local.yml
  tasks:
    - name: Remove AlwaysPullImages plugin config on masters
      become: true
      replace:
        path: /etc/origin/master/master-config.yaml
        regexp: '(\s+)AlwaysPullImages:\n(\s+)configuration:\n(\s+)kind: DefaultAdmissionConfig\n(\s+)apiVersion: v1\n(\s+)disable: false'
        replace: ""
        backup: true

    - name: Restart docker
      become: true
      service:
        name: docker
        state: restarted
        enabled: yes

    - name: Deploy register tools script
      become: true
      template:
        src: templates/pbench-register.sh.j2
        dest: /root/pbench-register.sh
        mode: 0744
      when: inventory_hostname == groups['master'][0]

    - name: Register remotes
      become: true
      shell: bash /root/pbench-register.sh
      when: inventory_hostname == groups['master'][0]
